#include <WiFiNINA.h>
#include <SPI.h>

// Credenziali WiFi
const char* ssid = "xlan";
const char* password = "Pterodattilo57";

// Indirizzo IP del server web (Raspberry Pi)
const char* serverAddress = "192.168.1.100"; // Cambia con l'IP del tuo Raspberry Pi
int serverPort = 80;

// Pin del contaimpulsi
const int pulsePin = 1; // Canale digitale 1
volatile int pulseCount = 0;

WiFiClient client;

// Funzione di interrupt per contare gli impulsi
void countPulse() {
  pulseCount++;
}

void setup() {
  // Inizializzazione seriale e del WiFi
  Serial.begin(9600);
  while (!Serial);

  // Connessione al WiFi
  Serial.print("Connessione a ");
  Serial.println(ssid);

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }

  Serial.println("");
  Serial.println("WiFi connesso!");
  Serial.println("Indirizzo IP: ");
  Serial.println(WiFi.localIP());

  // Configurazione del pin di input per il contaimpulsi
  pinMode(pulsePin, INPUT);
  attachInterrupt(digitalPinToInterrupt(pulsePin), countPulse, RISING);
}

void loop() {
  if (pulseCount > 0) {
    if (client.connect(serverAddress, serverPort)) {
      // Crea una richiesta HTTP per inviare il numero di impulsi al server
      client.print("GET /update?impulses=");
      client.print(pulseCount);
      client.println(" HTTP/1.1");
      client.print("Host: ");
      client.println(serverAddress);
      client.println("Connection: close");
      client.println();

      // Attendi la risposta del server
      while (client.connected() || client.available()) {
        if (client.available()) {
          String response = client.readString();
          Serial.println("Risposta dal server: ");
          Serial.println(response);
        }
      }

      // Chiudi la connessione
      client.stop();
    } else {
      Serial.println("Connessione al server fallita.");
    }

    // Resetta il contatore di impulsi
    pulseCount = 0;
  }

  delay(10000); // Invia i dati ogni 10 secondi
}